<?xml version="1.0" encoding="UTF-8"?>
<!--
    From https://raw.github.com/alex88/symfony2.1-jenkins-template/master/build.xml
-->
<project name="CouchbaseBundle" default="build">
    <target name="build" depends="prepare,lint,vendors,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpcb,phpunit"/>

    <target name="build-parallel" depends="prepare,lint,vendors,tools-parallel,phpunit,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/vendor"/>
        <delete file="${basedir}/cache.properties"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpdox"/>
    </target>

    <target name="checkModified" description="Check for modified php files">
        <echo message="Searching for newly modified files" />
        <path id="editedfiles">
            <fileset dir="${basedir}/">
                <modified />
                <include name="**/*.php" />
                <exclude name="**/vendor/**" />
                <exclude name="**/build/**" />
                <exclude name="**/Tests/**" />
            </fileset>
        </path>
        <pathconvert pathsep="${line.separator}" property="files.modified" refid="editedfiles" />
        <condition property="modifiedFiles">
            <not>
                <equals arg1="${files.modified}" arg2="" />
            </not>
        </condition>
    </target>

    <target name="lint" depends="checkModified" description="Perform syntax check of sourcecode files">
        <exec executable="bash" failonerror="true">
            <arg value="-c" />
            <arg value="echo '${files.modified}' | xargs -n 1 -P 4 php -l" />
        </exec>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="${basedir}/vendor/bin/phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg path="${basedir}" />
            <arg value="--exclude" />
            <arg value="vendor" />
            <arg value="--exclude" />
            <arg value="Tests" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="${basedir}/vendor/bin/pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg value="--ignore=${basedir}/vendor,${basedir}/Tests" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${basedir}/vendor/bin/phpmd">
            <arg path="${basedir}/" />
            <arg value="text" />
            <arg value="${basedir}/Resources/jenkins/phpmd.xml" />
            <arg value="--exclude" />
            <arg value="vendor,Tests" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="${basedir}/vendor/bin/phpmd">
            <arg path="${basedir}/" />
            <arg value="xml" />
            <arg value="${basedir}/Resources/jenkins/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="vendor,Tests" />
            <arg value="--suffixes" />
            <arg value=".php" />
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${basedir}/vendor/bin/phpcs">
            <arg value="--standard=Symfony2" />
            <arg path="${basedir}" />
            <arg value="--ignore=${basedir}/vendor,${basedir}/Tests" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="${basedir}/vendor/bin/phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=Symfony2" />
            <arg path="${basedir}" />
            <arg value="--ignore=${basedir}/vendor,${basedir}/Tests" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="${basedir}/vendor/bin/phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${basedir}" />
            <arg value="--exclude" />
            <arg value="vendor" />
            <arg value="--exclude" />
            <arg value="Tests" />
        </exec>
    </target>

    <target name="phpdox" description="Generate API documentation using phpDox">
        <exec executable="${basedir}/vendor/bin/phpdox">
            <arg value="-f" />
            <arg path="${basedir}/Resources/jenkins/phpdox.xml" />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="${basedir}/vendor/bin/phpunit" failonerror="true">
            <arg value="-c" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="${basedir}/vendor/bin/phpcb">
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
            <arg value="--ignore" />
            <arg path="${basedir}/vendor/" />
            <arg value="--ignore" />
            <arg path="${basedir}/build/" />
            <arg value="--ignore" />
            <arg path="${basedir}/Tests/" />
        </exec>
    </target>

    <target name="composer" description="Install composer.phar">
        <exec executable="bash">
            <arg value="-c"/>
            <arg value="curl -s http://getcomposer.org/installer | php"/>
        </exec>
    </target>

    <target name="vendors" depends="composer" description="Install vendors">
        <exec executable="${basedir}/composer.phar" failonerror="true">
            <arg value="install" />
            <arg value="--prefer-dist"/>
        </exec>
    </target>
</project>
